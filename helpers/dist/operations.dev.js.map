{"version":3,"sources":["operations.js"],"names":["display2","document","querySelector","formatNumber","displayTextContent","parseFloat","replaceAll","replace","addNumber","displayText","textContent","toLocaleString","maximumFractionDigits","subtractNumber","multiplyNumber","divideNumber","percentNumber","displayValue","resultNumber","includes","backButton","length","slice"],"mappings":"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","sourcesContent":["import { showError } from \"./displayFunctions.js\";\nimport { setAccumulated, setCounter, setOperation } from \"./status.js\";\n\nconst display2 = document.querySelector('#display2');\n\nconst formatNumber = ( displayTextContent )=> {\n\n  // CON ESTA FUNCION CORRIJO EL BUG DEL PUNTO EN NUMEROS ENTEROS EN ESPAÑOL\n  return parseFloat( displayTextContent.replaceAll('.','').replace(',','.') ); \n\n}\n\nexport const addNumber = ()=> {\n\n  if ( setOperation() === 'error' ) return\n\n  if ( displayText.textContent === '0' && setOperation() === 'divide' ) {\n    showError();\n    return\n  }\n\n  if( !display2.textContent && displayText.textContent === '0' ) { \n    display2.textContent = '0 + ';\n    setCounter( setCounter() + 1 );\n    setOperation( 'add' );\n    return\n  };\n    \n  if( ! display2.textContent ) { \n    display2.textContent = displayText.textContent + ' + ';\n    setAccumulated( setAccumulated() + formatNumber( displayText.textContent ));\n    setCounter( setCounter() + 1 )\n    setOperation( 'add' )\n    return\n  };\n\n  switch ( setOperation() ) {\n    case 'result' :\n      display2.textContent = setAccumulated() + ' + '\n      displayText.textContent = '0'\n      setOperation( 'add' );\n      return\n    case 'subtract' :\n      setAccumulated( setAccumulated() - formatNumber( displayText.textContent ) );\n      display2.textContent = setAccumulated() + ' - '\n      break;\n    case 'percent' :\n      displayText.textContent = setAccumulated().toLocaleString('es-ES', { maximumFractionDigits: 7 });\n      break;\n    case 'divide' :\n      setAccumulated( setAccumulated() / formatNumber( displayText.textContent ) );\n      display2.textContent = setAccumulated() + ' / '\n      break;\n    default:\n      setAccumulated( setAccumulated() + formatNumber( displayText.textContent ) );\n      display2.textContent = setAccumulated() + ' + '\n      break;\n  }\n    \n  displayText.textContent = setAccumulated().toLocaleString('es-ES', { maximumFractionDigits: 7 });\n  setCounter( setCounter() + 1 );\n  setOperation( 'add' );\n  \n}\n  \nexport const subtractNumber = ()=> {\n    \n    if ( setOperation() === 'error' ) return\n\n    if ( displayText.textContent === '0' && setOperation() === 'divide' ) {\n      showError();\n      return\n    }\n    \n    if( !display2.textContent &&  displayText.textContent === '0' ) { \n      display2.textContent = '0 - ';\n      setCounter( setCounter() + 1 );\n      setOperation( 'subtract' );\n      return\n    };\n    \n    if( !display2.textContent ) { \n      display2.textContent = displayText.textContent + ' - ';\n      setAccumulated( formatNumber( displayText.textContent ) );\n      setCounter( setCounter() + 1 );\n      setOperation( 'subtract' );\n      return\n    };\n    \n    if ( display2.textContent === '0 - ') {\n      display2.textContent =  '- ' + setAccumulated()\n      setAccumulated( setAccumulated() - formatNumber( displayText.textContent ) );\n      displayText.textContent = setAccumulated().toLocaleString('es-ES', { maximumFractionDigits: 7 });\n      setCounter( setCounter() + 1 );\n      setOperation( 'subtract' );\n      return\n    }\n\n    switch ( setOperation() ) {\n      case 'result':\n        display2.textContent = setAccumulated() + ' - '\n        displayText.textContent = '0'\n        setOperation( 'subtract' )\n        return\n      case 'add':\n        setAccumulated( setAccumulated() + formatNumber( displayText.textContent ) );\n        display2.textContent = setAccumulated() + ' + '\n        break;\n      case 'percent':\n        displayText.textContent = setAccumulated().toLocaleString('es-ES', { maximumFractionDigits: 7 });\n        break;\n      case 'divide':\n        setAccumulated( setAccumulated() / formatNumber( displayText.textContent ) );\n        display2.textContent = setAccumulated() + ' / '\n        break;\n      default:\n        setAccumulated( setAccumulated() - formatNumber( displayText.textContent ) );\n        display2.textContent = setAccumulated() + ' - '\n        break;\n    }\n        \n    displayText.textContent = setAccumulated().toLocaleString('es-ES', { maximumFractionDigits: 7 });\n    setCounter( setCounter() + 1 );\n    setOperation( 'subtract' )\n    \n}\n  \nexport const multiplyNumber = ()=>{\n\n  if ( setOperation() === 'error' ) return\n\n  if ( displayText.textContent === '0' && setOperation() === 'divide' ) {\n    showError();\n    return\n  }\n\n  if( !display2.textContent &&  displayText.textContent === '0' ) { \n    display2.textContent = '0 * ';\n    setCounter( setCounter() + 1 );\n    setOperation( 'multiply' );\n    return\n  };\n  \n  if( !display2.textContent ) { \n    setAccumulated( formatNumber( displayText.textContent ) );\n    display2.textContent = setAccumulated() + ' * ';\n    setCounter( setCounter() + 1 );\n    setOperation( 'multiply' )\n    return\n  };\n\n  switch ( setOperation() ) {\n    case 'result':\n      display2.textContent = setAccumulated() + ' * '\n      displayText.textContent = '0'\n      setOperation( 'multiply' )\n      return\n    case 'subtract':\n      setAccumulated( setAccumulated() - formatNumber( displayText.textContent ) );\n      display2.textContent = setAccumulated() + ' - '\n      break;\n    case 'divide':\n      setAccumulated( setAccumulated() / formatNumber( displayText.textContent ) );\n      display2.textContent = setAccumulated() + ' / '\n      break;\n    default:\n      setAccumulated( setAccumulated() * formatNumber( displayText.textContent ) );\n      display2.textContent = setAccumulated() + ' * '\n      break;\n  }\n    \n  displayText.textContent = setAccumulated().toLocaleString('es-ES', { maximumFractionDigits: 7 });\n  setCounter( setCounter() + 1 );\n  setOperation( 'multiply' );\n}\n\nexport const divideNumber = ()=>{\n  \n  if ( setOperation() === 'error' ) return\n\n  if( !display2.textContent ) { \n    setAccumulated( formatNumber( displayText.textContent ) );\n    display2.textContent = displayText.textContent + ' / ';\n    setCounter( setCounter() + 1 )\n    setOperation( 'divide' );\n    return\n  };\n\n  if ( displayText.textContent === '0' ) {\n    showError()\n    return\n  }\n  \n  switch ( setOperation() ) {\n    case 'result':\n      display2.textContent = setAccumulated() + ' / '\n      displayText.textContent = '0'\n      setOperation( 'divide' );\n      return\n    case 'subtract':\n      setAccumulated( setAccumulated() - formatNumber( displayText.textContent ) );\n      display2.textContent = setAccumulated() + ' - '\n      break;\n    default:\n      setAccumulated( setAccumulated() / formatNumber( displayText.textContent ) );\n      display2.textContent = setAccumulated() + ' / '\n      break;\n  }\n  \n  displayText.textContent = setAccumulated().toLocaleString('es-ES', { maximumFractionDigits: 7 });\n  setCounter( setCounter() + 1 );\n  setOperation( 'divide' );\n}\n\nexport const percentNumber = ()=>{\n\n  if ( setOperation() === 'error' ) return\n  \n  if ( displayText.textContent === '0' && setOperation() === 'divide' ) {\n    showError();\n    return\n  }\n\n  if ( setAccumulated() === 0 ) {\n    displayText.textContent = '0';\n    setCounter( setCounter() + 1 );\n    setOperation( 'percent' );\n    return\n  }\n\n  if ( !display2.textContent ) { \n    display2.textContent = 0;\n    setAccumulated( 0 );\n    setCounter( setCounter() + 1 );\n    setOperation( 'percent' );\n    return\n  };\n\n  let displayValue = setAccumulated() * formatNumber( displayText.textContent ) / 100;\n  \n  switch ( setOperation() ) {\n    case 'result':\n      displayText.textContent = '0'\n      setOperation( 'percent' );\n      return\n    case 'add':\n      setAccumulated( setAccumulated() + displayValue );\n      displayText.textContent = displayValue;\n      display2.textContent = display2.textContent + displayValue;\n      break;\n    case 'subtract':\n      setAccumulated( setAccumulated() - displayValue );\n      displayText.textContent = displayValue;\n      display2.textContent = display2.textContent + displayValue;\n      break;\n    case 'multiply':\n      setAccumulated( setAccumulated() * formatNumber( displayText.textContent ) / 100 );\n      displayText.textContent = formatNumber( displayText.textContent ) / 100 ;\n      display2.textContent = display2.textContent + formatNumber( displayText.textContent ) / 100;\n      break;\n    case 'divide':\n      setAccumulated( setAccumulated() / formatNumber( displayText.textContent ) / 100 );\n      displayText.textContent = formatNumber( displayText.textContent ) / 100 ;\n      display2.textContent = display2.textContent + formatNumber( displayText.textContent ) / 100;\n      break;\n  }\n        \n  setCounter( setCounter() + 1 );\n  setOperation( 'percent' );\n};\n\nexport const resultNumber = ()=> {\n\n  if ( setOperation() === 'error' ) return\n  \n  if ( !setOperation() ) return;\n\n  if ( displayText.textContent === '0' && setOperation() === 'divide' ) {\n    showError();\n    return\n  }\n\n  switch ( setOperation() ) {\n    case 'add':\n      ( display2.textContent.includes('=') ) ? display2.textContent = setAccumulated() + ' + ' + displayText.textContent + ' =' : display2.textContent = display2.textContent + displayText.textContent + ' =';\n      displayText.textContent = ( setAccumulated() + formatNumber( displayText.textContent ) ).toLocaleString('es-ES', { maximumFractionDigits: 7 });\n      break;\n    case 'subtract':\n      if ( display2.textContent === '- ' ) { \n        display2.textContent = '- ' + displayText.textContent\n      }else if( display2.textContent.includes('=') ){\n        display2.textContent = setAccumulated() + ' - ' + displayText.textContent + ' =' \n      }else{\n        display2.textContent = display2.textContent + displayText.textContent + ' ='\n      }\n      displayText.textContent = ( setAccumulated() - formatNumber( displayText.textContent ) ).toLocaleString('es-ES', { maximumFractionDigits: 7 });    \n      break;\n    case 'multiply':\n      ( display2.textContent.includes('=') ) ? display2.textContent = setAccumulated() + ' * ' + displayText.textContent + ' =' : display2.textContent = display2.textContent + displayText.textContent + ' =';\n      displayText.textContent = ( setAccumulated() * formatNumber( displayText.textContent ) ).toLocaleString('es-ES', { maximumFractionDigits: 7 });\n      break;\n    case 'divide':\n      ( display2.textContent.includes('=') ) ? display2.textContent = setAccumulated() + ' / ' + displayText.textContent + ' =' : display2.textContent = display2.textContent + displayText.textContent + ' =';\n      displayText.textContent = ( setAccumulated() / formatNumber( displayText.textContent ) ).toLocaleString('es-ES', { maximumFractionDigits: 7 }); \n      break;\n    case 'percent':\n      ( display2.textContent.includes('=') ) ? display2.textContent = setAccumulated() + ' % ' + displayText.textContent + ' =' : display2.textContent = display2.textContent + ' =';\n      displayText.textContent = setAccumulated().toLocaleString('es-ES', { maximumFractionDigits: 7 });\n      break;\n  }\n\n  setAccumulated( formatNumber( displayText.textContent ) );\n  setOperation( 'result' )\n};\n\nexport const backButton = ()=>{\n\n  if ( setOperation() === 'error' ) return\n\n  if ( !displayText.textContent ) return\n\n  if ( displayText.textContent.length <= 1 ) { \n    displayText.textContent = 0\n    return\n  }\n  displayText.textContent =  displayText.textContent.slice(0,-1)\n}"],"file":"operations.dev.js"}