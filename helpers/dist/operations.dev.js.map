{"version":3,"sources":["operations.js"],"names":["display2","document","querySelector","formatNumber","displayTextContent","parseFloat","replaceAll","replace","addNumber","textContent","displayText","toLocaleString","maximumFractionDigits","subtractNumber","console","log","multiplyNumber","divideNumber","percentNumber","displayValue","resultNumber","includes","backButton","length","slice"],"mappings":"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","sourcesContent":["import { showError } from \"./displayFunctions.js\";\nimport { setAccumulated, setCounter, setOperation, setOperationStatus } from \"./status.js\";\n\nconst display2 = document.querySelector(\"#display2\");\n\nconst formatNumber = (displayTextContent) => {\n  // CON ESTA FUNCION CORRIJO EL BUG DEL PUNTO EN NUMEROS ENTEROS EN ESPAÑOL\n  return parseFloat(displayTextContent.replaceAll(\".\", \"\").replace(\",\", \".\"));\n};\n\nexport const addNumber = () => {\n\n  if (setOperation() === \"error\") return;\n  \n  if (display2.textContent === \"0 - \" || display2.textContent === \"0 * \") {\n    setOperation() === \"subtract\"\n      ? setAccumulated(setAccumulated() - formatNumber(displayText.textContent))\n      : setAccumulated(setAccumulated() * formatNumber(displayText.textContent));\n    display2.textContent = `${setAccumulated()} + `;\n    setCounter(1);\n    setOperation(\"add\");\n    return;\n  }\n\n  if (displayText.textContent === \"0\" && setOperation() === \"divide\") {\n    showError();\n    return;\n  }\n\n  if (!display2.textContent && displayText.textContent === \"0\") {\n    display2.textContent = \"0 + \";\n    setCounter(1);\n    setOperation(\"add\");\n    return;\n  }\n\n  if (!display2.textContent) {\n    display2.textContent = displayText.textContent + \" + \";\n    setAccumulated(setAccumulated() + formatNumber(displayText.textContent));\n    setCounter(1);\n    setOperation(\"add\");\n    return;\n  }\n\n  if ( setOperation() !== \"add\"  && setOperationStatus() ){\n    displayText.textContent = 0\n    setAccumulated(setAccumulated() + formatNumber(displayText.textContent));\n    setCounter(1);\n    setOperation(\"add\");\n    display2.textContent = setAccumulated() + \" + \";\n    return;\n  }\n\n  switch (setOperation()) {\n    case \"result\":\n      display2.textContent = setAccumulated() + \" + \";\n      displayText.textContent = \"0\";\n      setOperation(\"add\");\n      return;\n    case \"subtract\":\n      setAccumulated(setAccumulated() - formatNumber(displayText.textContent));\n      break;\n    case \"divide\":\n      setAccumulated(setAccumulated() / formatNumber(displayText.textContent));\n      break;\n    case \"multiply\":\n      setAccumulated(setAccumulated() * formatNumber(displayText.textContent));\n      break;\n    default:\n      \n      setAccumulated(setAccumulated() + formatNumber(displayText.textContent));\n      break;\n  }\n  display2.textContent = setAccumulated() + \" + \";\n  displayText.textContent = setAccumulated().toLocaleString(\"es-ES\", {\n    maximumFractionDigits: 7,\n  });\n  setCounter(1);\n  setOperation(\"add\");\n};\n\nexport const subtractNumber = () => {\n\n  console.log( setOperationStatus() )\n\n  if (setOperation() === \"error\") return;\n\n  if (display2.textContent === \"0 + \" || display2.textContent === \"0 * \") {\n    setOperation() === \"add\"\n      ? setAccumulated(setAccumulated() + formatNumber(displayText.textContent))\n      : setAccumulated(setAccumulated() * formatNumber(displayText.textContent));\n    display2.textContent = `${setAccumulated()} - `;\n    setCounter(1);\n    setOperation(\"subtract\");\n    return;\n  }\n\n  if (displayText.textContent === \"0\" && setOperation() === \"divide\") {\n    showError();\n    return;\n  }\n\n  if (!display2.textContent && displayText.textContent === \"0\") {\n    display2.textContent = \"0 - \";\n    setCounter(1);\n    setOperation(\"subtract\");\n    return;\n  }\n\n  if (!display2.textContent) {\n    display2.textContent = displayText.textContent + \" - \";\n    setAccumulated(formatNumber(displayText.textContent));\n    setCounter(1);\n    setOperation(\"subtract\");\n    return;\n  }\n\n\n  if ( setOperation() !== \"subtract\" && setOperationStatus() ){\n    console.log(\"entro en add\")\n    displayText.textContent = 0\n    setAccumulated(setAccumulated() + formatNumber(displayText.textContent));\n    setCounter(1);\n    setOperation(\"subtract\");\n    display2.textContent = setAccumulated() + \" - \";\n    return;\n  }\n\n\n  switch (setOperation()) {\n    case \"result\":\n      display2.textContent = setAccumulated() + \" - \";\n      displayText.textContent = \"0\";\n      setOperation(\"subtract\");\n      return;\n    case \"add\":\n\n      setAccumulated(setAccumulated() + formatNumber(displayText.textContent));\n      break;\n    case \"divide\":\n      setAccumulated(setAccumulated() / formatNumber(displayText.textContent));\n      break;\n    case \"multiply\":\n      setAccumulated(setAccumulated() * formatNumber(displayText.textContent));\n      break;\n    default:\n      \n      setAccumulated(setAccumulated() - formatNumber(displayText.textContent));\n      break;\n  }\n\n  display2.textContent = setAccumulated() + \" - \";\n  displayText.textContent = setAccumulated().toLocaleString(\"es-ES\", {\n    maximumFractionDigits: 7,\n  });\n  setCounter(1);\n  setOperation(\"subtract\");\n};\n\nexport const multiplyNumber = () => {\n\n  if (setOperation() === \"error\") return;\n\n  if (display2.textContent === \"0 + \" || display2.textContent === \"0 - \") {\n    setOperation() === \"subtract\"\n      ? setAccumulated(setAccumulated() - formatNumber(displayText.textContent))\n      : setAccumulated(setAccumulated() + formatNumber(displayText.textContent));\n    display2.textContent = `${setAccumulated()} * `;\n    setCounter(1);\n    setOperation(\"multiply\");\n    return;\n  }\n\n  if (displayText.textContent === \"0\" && setOperation() === \"divide\") {\n    showError();\n    return;\n  }\n\n  if (!display2.textContent && displayText.textContent === \"0\") {\n    display2.textContent = \"0 * \";\n    setCounter(1);\n    setOperation(\"multiply\");\n    return;\n  }\n\n  if (!display2.textContent) {\n    console.log(\"entro en el multi\")\n    setAccumulated(formatNumber(displayText.textContent));\n    display2.textContent = setAccumulated() + \" * \";\n    setCounter(1);\n    setOperation(\"multiply\");\n    return;\n  }\n\n  if ( setOperation() !== \"multiply\"  && setOperationStatus() ){\n    displayText.textContent = 0\n    setAccumulated(setAccumulated() + formatNumber(displayText.textContent));\n    setCounter(1);\n    setOperation(\"multiply\");\n    display2.textContent = setAccumulated() + \" * \";\n    return;\n  }\n\n  switch (setOperation()) {\n    case \"result\":\n      display2.textContent = setAccumulated() + \" * \";\n      displayText.textContent = \"0\";\n      setOperation(\"multiply\");\n      return;\n    case \"subtract\":\n      setAccumulated(setAccumulated() - formatNumber(displayText.textContent));\n      break;\n    case \"divide\":\n      setAccumulated(setAccumulated() / formatNumber(displayText.textContent));\n      break;\n    case \"add\":\n      setAccumulated(setAccumulated() + formatNumber(displayText.textContent));\n      break;\n    default:\n      setAccumulated(setAccumulated() * formatNumber(displayText.textContent));\n      break;\n  }\n\n  display2.textContent = setAccumulated() + \" * \";\n  displayText.textContent = setAccumulated().toLocaleString(\"es-ES\", {\n    maximumFractionDigits: 7,\n  });\n  setCounter(1);\n  setOperation(\"multiply\");\n};\n\nexport const divideNumber = () => {\n  if (setOperation() === \"error\") return;\n\n  if (!display2.textContent) {\n    setAccumulated(formatNumber(displayText.textContent));\n    display2.textContent = displayText.textContent + \" / \";\n    setCounter(1);\n    setOperation(\"divide\");\n    return;\n  }\n\n  if (displayText.textContent === \"0\") {\n    showError();\n    return;\n  }\n\n  if ( setOperation() !== \"divide\"  && setOperationStatus() ){\n    displayText.textContent = 0\n    setAccumulated(setAccumulated() + formatNumber(displayText.textContent));\n    setCounter(1);\n    setOperation(\"divide\");\n    display2.textContent = setAccumulated() + \" / \";\n    return;\n  }\n\n  switch (setOperation()) {\n    case \"result\":\n      display2.textContent = setAccumulated() + \" / \";\n      displayText.textContent = \"0\";\n      setOperation(\"divide\");\n      return;\n    case \"subtract\":\n      setAccumulated(setAccumulated() - formatNumber(displayText.textContent));\n      break;\n    case \"add\":\n      setAccumulated(setAccumulated() + formatNumber(displayText.textContent));\n      break;\n    case \"multiply\":\n      setAccumulated(setAccumulated() * formatNumber(displayText.textContent));\n      break;\n    default:\n      setAccumulated(setAccumulated() / formatNumber(displayText.textContent));\n      break;\n\n  }\n\n  displayText.textContent = setAccumulated().toLocaleString(\"es-ES\", {\n    maximumFractionDigits: 7,\n  });\n  display2.textContent = setAccumulated() + \" / \";\n  setCounter(1);\n  setOperation(\"divide\");\n};\n\nexport const percentNumber = () => {\n  if (setOperation() === \"error\") return;\n\n  if (displayText.textContent === \"0\" && setOperation() === \"divide\") {\n    showError();\n    return;\n  }\n\n  if (setAccumulated() === 0) {\n    displayText.textContent = \"0\";\n    setCounter(1);\n    setOperation(\"percent\");\n    return;\n  }\n\n  if (!display2.textContent) {\n    display2.textContent = 0;\n    setAccumulated(0);\n    setCounter(1);\n    setOperation(\"percent\");\n    return;\n  }\n\n  let displayValue =\n    (setAccumulated() * formatNumber(displayText.textContent)) / 100;\n\n  switch (setOperation()) {\n    case \"result\":\n      displayText.textContent = \"0\";\n      setOperation(\"percent\");\n      return;\n    case \"add\":\n      setAccumulated(setAccumulated() + displayValue);\n      displayText.textContent = displayValue;\n      display2.textContent = display2.textContent + displayValue;\n      break;\n    case \"subtract\":\n      setAccumulated(setAccumulated() - displayValue);\n      displayText.textContent = displayValue;\n      display2.textContent = display2.textContent + displayValue;\n      break;\n    case \"multiply\":\n      setAccumulated(\n        (setAccumulated() * formatNumber(displayText.textContent)) / 100,\n      );\n      displayText.textContent = formatNumber(displayText.textContent) / 100;\n      display2.textContent =\n        display2.textContent + formatNumber(displayText.textContent) / 10;\n      break;\n    case \"divide\":\n      setAccumulated(\n        (setAccumulated() / formatNumber(displayText.textContent)) * 100,\n      );\n      displayText.textContent = formatNumber(displayText.textContent) / 100;\n      display2.textContent =\n        display2.textContent + formatNumber(displayText.textContent) / 10;\n      break;\n  }\n\n  setCounter(1);\n  setOperation(\"percent\");\n};\n\nexport const resultNumber = () => {\n  if (setOperation() === \"error\") return;\n\n  if (!setOperation()) return;\n\n  if (displayText.textContent === \"0\" && setOperation() === \"divide\") {\n    showError();\n    return;\n  }\n\n  switch (setOperation()) {\n    case \"add\":\n      display2.textContent.includes(\"=\")\n        ? (display2.textContent =\n          setAccumulated() + \" + \" + displayText.textContent + \" =\")\n        : (display2.textContent =\n          display2.textContent + displayText.textContent + \" =\");\n      displayText.textContent = (\n        setAccumulated() + formatNumber(displayText.textContent)\n      ).toLocaleString(\"es-ES\", { maximumFractionDigits: 7 });\n      break;\n    case \"subtract\":\n      if (display2.textContent === \"- \") {\n        display2.textContent = \"- \" + displayText.textContent;\n      } else if (display2.textContent.includes(\"=\")) {\n        display2.textContent =\n          setAccumulated() + \" - \" + displayText.textContent + \" =\";\n      } else {\n        display2.textContent =\n          display2.textContent + displayText.textContent + \" =\";\n      }\n      displayText.textContent = (\n        setAccumulated() - formatNumber(displayText.textContent)\n      ).toLocaleString(\"es-ES\", { maximumFractionDigits: 7 });\n      break;\n    case \"multiply\":\n      display2.textContent.includes(\"=\")\n        ? (display2.textContent =\n          setAccumulated() + \" * \" + displayText.textContent + \" =\")\n        : (display2.textContent =\n          display2.textContent + displayText.textContent + \" =\");\n      displayText.textContent = (\n        setAccumulated() * formatNumber(displayText.textContent)\n      ).toLocaleString(\"es-ES\", { maximumFractionDigits: 7 });\n      break;\n    case \"divide\":\n      display2.textContent.includes(\"=\")\n        ? (display2.textContent =\n          setAccumulated() + \" / \" + displayText.textContent + \" =\")\n        : (display2.textContent =\n          display2.textContent + displayText.textContent + \" =\");\n      displayText.textContent = (\n        setAccumulated() / formatNumber(displayText.textContent)\n      ).toLocaleString(\"es-ES\", { maximumFractionDigits: 7 });\n      break;\n    case \"percent\":\n      display2.textContent.includes(\"=\")\n        ? (display2.textContent =\n          setAccumulated() + \" % \" + displayText.textContent + \" =\")\n        : (display2.textContent = display2.textContent + \" =\");\n      displayText.textContent = setAccumulated().toLocaleString(\"es-ES\", {\n        maximumFractionDigits: 7,\n      });\n      break;\n  }\n\n  setAccumulated(formatNumber(displayText.textContent));\n  setOperation(\"result\");\n};\n\nexport const backButton = () => {\n  if (setOperation() === \"error\") return;\n\n  if (!displayText.textContent) return;\n\n  if (displayText.textContent.length <= 1) {\n    displayText.textContent = 0;\n    return;\n  }\n  displayText.textContent = displayText.textContent.slice(0, -1);\n};\n"],"file":"operations.dev.js"}