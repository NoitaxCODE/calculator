{"version":3,"sources":["operations.js"],"names":["display2","document","querySelector","accumulated","operation","counter","formatNumber","displayTextContent","parseFloat","replaceAll","replace","setCounter","value","setAccumulated","setOperation","addNumber","displayText","textContent","showError","toLocaleString","maximumFractionDigits","subtractNumber","console","log","multiplyNumber","divideNumber","percentNumber","displayValue","resultNumber","classList","remove","backButton","length","slice"],"mappings":"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","sourcesContent":["const display2 = document.querySelector('#display2');\nlet accumulated = 0;\nlet operation;\nlet counter = 0;\n\nconst formatNumber = ( displayTextContent )=> {\n\n  // CON ESTA FUNCION CORRIJO EL BUG DEL PUNTO EN NUMEROS ENTEROS EN ESPAÑOL\n  return parseFloat( displayTextContent.replaceAll('.','').replace(',','.') ); \n\n}\n\nexport const setCounter = (value = counter)=> {\n  counter = value\n  return counter\n}\n\nexport const setAccumulated = (value = accumulated)=> {\n  accumulated = value\n  return accumulated\n}\n\nexport const setOperation = (value = operation)=> {\n  operation = value\n  return operation\n}\n\nexport const addNumber = ()=> {\n\n  if ( displayText.textContent === '0' && operation === 'divide' ) {\n    showError();\n    return\n  }\n    \n  if ( operation === 'result' ) {\n    displayText.textContent = '0'\n    operation = 'add'\n    return\n  }\n\n  if( ! display2.textContent ) { \n    display2.textContent = displayText.textContent + ' + ';\n    accumulated += formatNumber( displayText.textContent );\n    counter += 1\n    operation = 'add'\n    return\n  };\n  \n  if (operation === 'subtract') {\n    accumulated -= formatNumber( displayText.textContent );\n    display2.textContent = accumulated + ' - '\n  }else if( operation === 'percent' ){\n    displayText.textContent = accumulated.toLocaleString('es-ES', { maximumFractionDigits: 7 });\n  }else if( operation === 'divide' ){\n    accumulated /= formatNumber( displayText.textContent );\n    display2.textContent = accumulated + ' / '\n  }else{\n    accumulated += formatNumber( displayText.textContent );\n    display2.textContent = accumulated + ' + '\n  }\n  \n  displayText.textContent = accumulated.toLocaleString('es-ES', { maximumFractionDigits: 7 });\n  counter += 1;\n  operation = 'add'\n  \n}\n  \nexport const subtractNumber = ()=> {\n\n    if ( displayText.textContent === '0' && operation === 'divide' ) {\n      showError();\n      return\n    }\n\n    if ( operation === 'result' ) {\n      displayText.textContent = '0'\n      operation = 'subtract'\n      return\n    }\n    \n    if( !display2.textContent &&  displayText.textContent === '0' ) { \n      display2.textContent = '0 - ';\n      accumulated = formatNumber( displayText.textContent );\n      counter += 1\n      operation = 'subtract'\n      console.log(\"Entro aca!\")\n      return\n    };\n    \n    if( !display2.textContent ) { \n      display2.textContent = displayText.textContent + ' - ';\n      accumulated = formatNumber( displayText.textContent );\n      counter += 1\n      operation = 'subtract'\n      return\n    };\n    \n    if ( display2.textContent === '0 - ') {\n      display2.textContent =  '- ' + accumulated\n      accumulated -= formatNumber( displayText.textContent );\n      displayText.textContent = accumulated.toLocaleString('es-ES', { maximumFractionDigits: 7 });\n      counter += 1\n      operation = 'subtract'\n      return\n    }\n    \n    if (operation === 'add') {\n      accumulated += formatNumber( displayText.textContent );\n      display2.textContent = accumulated + ' + '\n    }else if( operation === 'percent' ){\n      displayText.textContent = accumulated.toLocaleString('es-ES', { maximumFractionDigits: 7 });\n    }else if( operation === 'divide' ){\n      accumulated /= formatNumber( displayText.textContent );\n      display2.textContent = accumulated + ' / '\n    }else {\n      accumulated -= formatNumber( displayText.textContent );\n      display2.textContent = accumulated + ' - '\n    }\n    \n    displayText.textContent = accumulated.toLocaleString('es-ES', { maximumFractionDigits: 7 });\n    counter += 1;\n    operation = 'subtract'\n    \n}\n  \nexport const multiplyNumber = ()=>{\n\n  if ( displayText.textContent === '0' && operation === 'divide' ) {\n    showError();\n    return\n  }\n  \n  if ( operation === 'result' ) {\n    displayText.textContent = '0'\n    operation = 'multiply'\n    return\n  }\n\n  if( !display2.textContent ) { \n    accumulated = formatNumber( displayText.textContent );\n    display2.textContent = accumulated + ' * ';\n    counter += 1\n    operation = 'multiply'\n    return\n  };\n  \n  if (operation === 'subtract') {\n    accumulated -= formatNumber( displayText.textContent );\n    display2.textContent = accumulated + ' - '\n  }else if( operation === 'divide' ){\n    accumulated /= formatNumber( displayText.textContent );\n    display2.textContent = accumulated + ' / '\n  }else {\n    accumulated *= formatNumber( displayText.textContent );\n    display2.textContent = accumulated + ' * '\n  }\n  \n  displayText.textContent = accumulated.toLocaleString('es-ES', { maximumFractionDigits: 7 });\n  counter += 1;\n  operation = 'multiply'\n}\n\nexport const divideNumber = ()=>{\n  \n    \n  if ( operation === 'result' ) {\n    displayText.textContent = '0'\n    operation = 'divide'\n    return\n  }\n\n  if( !display2.textContent ) { \n    accumulated = formatNumber( displayText.textContent );\n    display2.textContent = displayText.textContent + ' / ';\n    counter += 1\n    operation = 'divide'\n    return\n  };\n\n  if ( displayText.textContent === '0' ) {\n    showError()\n    return\n  }\n  \n  if (operation === 'subtract') {\n    accumulated -= formatNumber( displayText.textContent );\n    display2.textContent = accumulated + ' - '\n  }else {\n    accumulated /= formatNumber( displayText.textContent );\n    display2.textContent = accumulated + ' / '\n  }\n  \n  displayText.textContent = accumulated.toLocaleString('es-ES', { maximumFractionDigits: 7 });\n  counter += 1;\n  operation = 'divide'\n}\n\nexport const percentNumber = ()=>{\n  \n  if ( displayText.textContent === '0' && operation === 'divide' ) {\n    showError();\n    return\n  }\n\n  if ( operation === 'result' ) {\n    displayText.textContent = '0'\n    operation = 'percent'\n    return\n  };\n\n  if ( accumulated === 0 ) {\n    displayText.textContent = '0';\n    counter += 1\n    operation = 'percent'\n    return\n  }\n\n  if ( !display2.textContent ) { \n    display2.textContent = 0;\n    accumulated = 0;\n    counter += 1\n    operation = 'percent'\n    return\n  };\n\n  let displayValue = accumulated * formatNumber( displayText.textContent ) / 100;\n  \n  switch ( operation ) {\n    case 'add':\n      accumulated += displayValue;\n      displayText.textContent = displayValue;\n      display2.textContent = display2.textContent + displayValue;\n      break;\n    case 'subtract':\n      accumulated -= displayValue;\n      displayText.textContent = displayValue;\n      display2.textContent = display2.textContent + displayValue;\n      break;\n    case 'multiply':\n      accumulated *=  formatNumber( displayText.textContent ) / 100 ;\n      displayText.textContent = formatNumber( displayText.textContent ) / 100 ;\n      display2.textContent = display2.textContent + formatNumber( displayText.textContent ) / 100;\n      break;\n    case 'divide':\n      accumulated /=  formatNumber( displayText.textContent ) / 100;\n      displayText.textContent = formatNumber( displayText.textContent ) / 100 ;\n      display2.textContent = display2.textContent + formatNumber( displayText.textContent ) / 100;\n      break;\n  }\n        \n  counter += 1;\n  operation = 'percent'\n};\n\nexport const resultNumber = ()=> {\n  \n  if ( !operation ) return;\n\n  if ( displayText.textContent === '0' && operation === 'divide' ) {\n    showError();\n    return\n  }\n\n  switch ( operation ) {\n    case 'add':\n      display2.textContent = display2.textContent + displayText.textContent + ' ='\n      displayText.textContent = ( accumulated + formatNumber( displayText.textContent ) ).toLocaleString('es-ES', { maximumFractionDigits: 7 });\n      break;\n    case 'subtract':\n      if ( display2.textContent === '- ' ) { \n        display2.textContent = '- ' + displayText.textContent\n      }else{\n        display2.textContent = display2.textContent + displayText.textContent + ' ='\n      }\n      displayText.textContent = ( accumulated - formatNumber( displayText.textContent ) ).toLocaleString('es-ES', { maximumFractionDigits: 7 });    \n      break;\n    case 'multiply':\n      display2.textContent = display2.textContent + displayText.textContent + ' ='\n      displayText.textContent = ( accumulated * formatNumber( displayText.textContent ) ).toLocaleString('es-ES', { maximumFractionDigits: 7 });\n      break;\n    case 'divide':\n      display2.textContent = display2.textContent + displayText.textContent + ' ='\n      displayText.textContent = ( accumulated / formatNumber( displayText.textContent ) ).toLocaleString('es-ES', { maximumFractionDigits: 7 }); \n      break;\n    case 'percent':\n      display2.textContent = display2.textContent + ' =';\n      displayText.textContent = accumulated.toLocaleString('es-ES', { maximumFractionDigits: 7 });\n      break;\n  }\n\n  accumulated = formatNumber( displayText.textContent );\n  operation = 'result'\n};\n\nexport const showError = ()=>{\n  displayText.textContent = 'ERROR';\n  display2.textContent = '';\n  display2.classList.remove('display2-bg');\n  accumulated = 0;\n  operation = '';\n}\n\nexport const backButton = ()=>{\n  if ( !displayText.textContent ) return\n\n  if ( displayText.textContent.length <= 2 ) { \n    displayText.textContent = 0\n    return\n  }\n  displayText.textContent =  displayText.textContent.slice(0,-1)\n}"],"file":"operations.dev.js"}